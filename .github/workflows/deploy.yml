name: Deploy Polly App

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create Lambda package
        run: |
          mkdir -p deploy
          zip -j deploy/api.zip lambda/api.py

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -upgrade

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve
        timeout-minutes: 30

      - name: Update API URL and re-upload website
        run: |
          API_URL=$(cd terraform && terraform output -raw api_url)
          WEBSITE_BUCKET=$(cd terraform && terraform output -raw website_bucket)
          
          # Update API URL in JavaScript
          sed -i "s|https://YOUR_API_ID.execute-api.us-east-1.amazonaws.com/prod|$API_URL|g" website/scripts.js
          
          # Re-upload updated JavaScript file
          aws s3 cp website/scripts.js s3://$WEBSITE_BUCKET/scripts.js --content-type "application/javascript"

      - name: Update API URL in website
        run: |
          API_URL=$(cd terraform && terraform output -raw api_url)
          sed -i "s|https://YOUR_API_ID.execute-api.us-east-1.amazonaws.com/prod|$API_URL|g" website/scripts.js
          
      - name: Upload updated website files
        run: |
          WEBSITE_BUCKET=$(cd terraform && terraform output -raw website_bucket)
          aws s3 cp website/scripts.js s3://$WEBSITE_BUCKET/scripts.js --content-type "application/javascript"